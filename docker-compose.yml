# Docker Compose file for Vapor
#
# Install Docker on your system to run and test
# your Vapor app in a production-like environment.
#
# Note: This file is intended for testing and does not
# implement best practices for a production deployment.
#
# Learn more: https://docs.docker.com/compose/reference/
#
#   Build images: docker-compose build
#      Start app: docker-compose up app{{#mongo_native}}
# Start database: docker-compose up db 
# Run migrations: docker-compose run migrate{{/mongo_native}} 
#       Stop all: docker-compose down {{#mongo_native}} (add -v to wipe db){{/mongo_native}}
#
version: '3.7'{{#mongo_native}}

volumes:
  db_data:{{/mongo_native}}

x-shared_environment: &shared_environment
  LOG_LEVEL: ${LOG_LEVEL:-debug}{{#mongo_native}}
  MONGODB_URI: mongodb://db:27017/vapor_database{{/mongo_native}}
  
services:
  app:
    image: {{name_kebab}}:latest
    build:
      context: .
    environment:
      <<: *shared_environment{{#mongo_native}}
    depends_on:
      - db{{/mongo_native}}
    ports:
      - '8080:8080'
    # user: '0' # uncomment to run as root for testing purposes even though Dockerfile defines 'vapor' user.
    command: ["serve", "--env", "production", "--hostname", "0.0.0.0", "--port", "8080"]{{#mongo_native}}
  migrate:
    image: {{name_kebab}}:latest
    build:
      context: .
    environment:
      <<: *shared_environment
    depends_on:
      - db
    command: ["migrate", "--yes"]
    deploy:
      replicas: 0
  revert:
    image: {{name_kebab}}:latest
    build:
      context: .
    environment:
      <<: *shared_environment
    depends_on:
      - db
    command: ["migrate", "--revert", "--yes"]
    deploy:
      replicas: 0
  db:
    image: mongo:latest
    volumes:
      - db_data:/data/db
    restart: unless-stopped
    ports:
      - '27017:27017'{{/mongo_native}}
